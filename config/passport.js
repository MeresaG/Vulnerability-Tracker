const GoogleStrategy = require('passport-google-oauth20').Strategy;

const mongoose = require('mongoose');

const Person = require('../api/model/Person');

module.exports =  function(passport) {

    passport.use(new GoogleStrategy({

        clientID: process.env.GOOGLE_CLIENT_ID,
        clientSecret: process.env.GOOGLE_CLIENT_SECRET,
        callbackURL: '/auth/google/callback',

    },
    async (accessToken, refreshToken, profile, done) => {
            console.log(profile);
            const newPerson = {
              googleId: profile.id,
              displayName: profile.displayName,
              firstName: profile.name.givenName,
              lastName: profile.name.familyName,
              image: profile.photos[0].value
            }

            try {
              let person = await Person.findOne({ googleId : profile.id})
              if(person) {
                done(null, person)
              }
              else {
                person = await Person.create(newPerson);
                done(null, person);
              }
            } catch (error) {
              console.error(error);
            }
    }))

    passport.serializeUser((person, done) =>{
        done(null, person.id);
      });
      
      passport.deserializeUser( (id, done) => {
        Person.findById(id, (err, person) => done(err, person));
      });

}
