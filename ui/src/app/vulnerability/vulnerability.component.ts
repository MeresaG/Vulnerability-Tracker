import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Vulnerability } from '../vulnerabilities/vulnerabilities.component';
import { VulnerabilityService } from '../vulnerability.service';

@Component({
  selector: 'app-vulnerability',
  templateUrl: './vulnerability.component.html',
  styleUrls: ['./vulnerability.component.css']
})
export class VulnerabilityComponent implements OnInit {

  searchTerm!: string;
  term!: string;

  vulnerability!:Vulnerability;
  constructor(private route:ActivatedRoute, private vulnerabilityService:VulnerabilityService) {
    this.vulnerability = new Vulnerability("", "", "");
   }

  ngOnInit(): void {
    let vulId:string;
    this.route.params.subscribe((params) => { 
      vulId = params['vulId'];
      this.vulnerabilityService.getVulnerability(vulId).subscribe(vul => this.vulnerability = vul)
    })
  }



  onDelete(vulId:string, commentId:string) {
    if (confirm('Are you sure you want to delete this comment from the database?')) {
      // Save it!
      this.vulnerabilityService.deleteComment(vulId, commentId).subscribe((vul) => { 
        console.log(vul);
        
        this.ngOnInit()});
    }  
    else {
      return;
    }  
  }

}
