import { Component, Input, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import {Router } from '@angular/router';
import { VulnerabilityService } from '../vulnerability.service';

export class Comment {
  #_id!: string;
  #title!: string;
  #comment!: string;

  get _id() {return this.#_id;}
  get title() {return this.#title;}
  set title(title: string) {this.#title= title;}
  get comment() {return this.#comment;}
  set comment(comment: string) {this.#comment= comment;}

  constructor(id:string, title:string, comment:string) {
    this.#_id = id;
    this.#comment= comment;
    this.#title = title;
  }

}

@Component({
  selector: 'app-comment',
  templateUrl: './comment.component.html',
  styleUrls: ['./comment.component.css']
})
export class CommentComponent implements OnInit {

  comments!:Comment[];
  commentForm!:FormGroup;
  @Input() 
  vulId:string = "";

  
  constructor(private fb : FormBuilder , private router:Router, private vulnerabilityService:VulnerabilityService) {
    this.commentForm = this.fb.group( {

      title: [''],
      comment: ['']

    })
   }

  ngOnInit(): void {
    
  }

  addComment(commentForm:FormGroup) {
    if(confirm('do you want to add this comment to the vulnerability?')) {
    console.log(commentForm.value);

    this.vulnerabilityService.addComment(commentForm.value, this.vulId).subscribe((vul) => {console.log(vul);
    })
    this.commentForm.reset();

    
  }
else {
  return;
}
 }
 
}
