import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { FormGroup } from '@angular/forms';
import { Observable } from 'rxjs';
import { Vulnerability } from './vulnerabilities/vulnerabilities.component';
import { Comment } from './comment/comment.component';

@Injectable({
  providedIn: 'root'
})
export class VulnerabilityService {

  private baseUrl = "http://localhost:3000/api"

  constructor(private http:HttpClient) { }

  public getVulnerabilities() : Observable<Vulnerability[]> {
    let url = this.baseUrl + "/vulnerabilities";
    return this.http.get<Vulnerability[]>(url);
  }

  public getVulnerability(id:string) : Observable<Vulnerability> {
    let url = this.baseUrl + "/vulnerabilities/" + id;
    return this.http.get<Vulnerability>(url);
  }

  public deleteVulnerability(id:string): Observable<Vulnerability> {
    let url = this.baseUrl + "/vulnerabilities/" + id;
    
    return this.http.delete<Vulnerability>(url);
  }

  public addVulnerability(body:FormGroup): Observable<Vulnerability> {
    let url = this.baseUrl + "/vulnerabilities";

    return this.http.post<Vulnerability>(url, body);
  }
  public updateVulnerability(body:FormGroup, id:string): Observable<Vulnerability> {
    let url = this.baseUrl + "/vulnerabilities/" + id;

    return this.http.put<Vulnerability>(url, body);
  }

  public addComment(body:FormGroup, vulId:string):Observable<Vulnerability> {
    let url = this.baseUrl + "/vulnerabilities/" + vulId + "/comments";

    return this.http.post<Vulnerability>(url, body);
  }

  public deleteComment(vulId:string, commentId:string):Observable<Vulnerability> {
    let url = this.baseUrl + "/vulnerabilities/" + vulId + "/comments/" + commentId;

    return this.http.delete<Vulnerability>(url);
  }

  public updateComment(body:FormGroup, vulId :string, commentId:string): Observable<Comment> {
    let url = this.baseUrl + "/vulnerabilities/" + vulId + "/comments/" + commentId;

    return this.http.put<Comment>(url, body);
  }
  public getComment(vulId:string, commentId:string) : Observable<Comment> {
    let url = this.baseUrl + "/vulnerabilities/" + vulId +"/comments/"+commentId;
    return this.http.get<Comment>(url);
  }

}
