import { Component, OnInit, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Vulnerability } from '../vulnerabilities/vulnerabilities.component';
import { VulnerabilityService } from '../vulnerability.service';

@Component({
  selector: 'app-edit-vulnerability',
  templateUrl: './edit-vulnerability.component.html',
  styleUrls: ['./edit-vulnerability.component.css']
})
export class EditVulnerabilityComponent implements OnInit {

  @ViewChild('vulnerabilityForm')
  vulnerabilityForm!:NgForm;
  vulnerability!:Vulnerability;

  statusOptions:string[] = ["opened", "in progress", "closed"]
  severityOptions:string[] = ["Low", "Medium", "High", "Critical"]

  constructor(private route: ActivatedRoute, private vulnerabilityService:VulnerabilityService, private router:Router) { 
  
  }

  ngOnInit(): void {
    let vulId:string;
    this.route.params.subscribe((params) => { 
      vulId = params['vulId'];
      this.vulnerabilityService.getVulnerability(vulId).subscribe( (vul) => {
        this.vulnerability = vul;
     }) 
    })
    

    setTimeout(() => {
      this.vulnerabilityForm.setValue(this.vulnerability);
    }, 0);
  }

  edit(vulForm:NgForm) {
    if (confirm('Are you sure you want to edit this vulnerability from the database?')) {
    console.log(vulForm.value);
    this.vulnerabilityService.updateVulnerability(vulForm.value, this.vulnerability._id).subscribe( () => {
      this.router.navigate([''])
    })
  } else {
    return;
  }
    
  }

}
