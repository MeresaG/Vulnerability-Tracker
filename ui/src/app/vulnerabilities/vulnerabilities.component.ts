import { Component, OnInit } from '@angular/core';
import { VulnerabilityService } from '../vulnerability.service';
import {Comment} from '../comment/comment.component'

export class Vulnerability {
  #_id!: string;
  #vulnerabilityType!: string;
  #projectName!: string;
  #status!: string;
  #severity!: string;
  #description!: string;
  #comment!:Comment[];
  #createdAt!:Date;
  get _id() {return this.#_id;}
  get projectName() {return this.#projectName;}
  set projectName(projectName: string) {this.#projectName= projectName;}
  get vulnerabilityType() {return this.#vulnerabilityType;}
  set vulnerabilityType(vulnerabilityType: string) {this.#vulnerabilityType= vulnerabilityType;}
  get severity() {return this.#severity;}
  set severity(severity: string) { this.#severity= severity;}
  get description() {return this.#description;}
  set description(description: string) { this.#description= description;}
  get status() {return this.#status;}
  set status(status: string) { this.#status= status;}
  set comment(comment:Comment[]) {
    this.#comment = comment;
  }
  get comment() {
    return this.#comment;
  }
  get createdAt() {return this.#createdAt;}
  set createdAt(createdAt: Date) { this.#createdAt= createdAt;}
  constructor(id: string, vulnerabilityType: string, projectName: string) {
  this.#_id= id;
  this.#vulnerabilityType= vulnerabilityType;
  this.#projectName= projectName;
  }
  }

@Component({
  selector: 'app-vulnerabilities',
  templateUrl: './vulnerabilities.component.html',
  styleUrls: ['./vulnerabilities.component.css']
})
export class VulnerabilitiesComponent implements OnInit {

  vulnerabilities!: Vulnerability[];
  searchTerm!: string;
  term!: string;
  constructor(private vulnerabilityService: VulnerabilityService) { }

  ngOnInit(): void {

    this.vulnerabilityService.getVulnerabilities().subscribe(vuls =>  { 
      this.vulnerabilities = vuls;
      
    })
  }

  onDelete(vulId:string) {
    if (confirm('Are you sure you want to delete this vulnerability from the database?')) {
      // Save it!
      this.vulnerabilityService.deleteVulnerability(vulId).subscribe((vul) => { 
        console.log(vul);
        
        this.ngOnInit()});
    }  
    else {
      return;
    }  
    
  }

}
