import { AfterViewInit, Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, FormGroupDirective, Validators } from '@angular/forms';
import { AuthService } from '../auth.service';
import * as M from 'materialize-css';
import { User } from '../login/login.component';

declare var document: any;


@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent implements OnInit, AfterViewInit {

  registerationForm: FormGroup;
  errorMessage = "";
  success = ""
  submitted:boolean = false;

  users!:User[]
  searchTerm!: string;
  

  roles =  ['Administrator', 'Developer', 'Product Manager']
  constructor(private fb : FormBuilder, private authService:AuthService) { 
    this.registerationForm = this.fb.group({
      firstName :['', [Validators.required]],
      lastName: ['', Validators.required],
      userName:['', Validators.required],
      email:['', [Validators.required, Validators.email]],
      role:[''],
      password: ['', [
        Validators.required, 
        Validators.pattern('^(?=.*[A-Za-z])(?=.*[$@$!%*#?&]).{8,}$')
    ]],
    passwordConfirm:['', [Validators.required]]
    }, { 

      validator: this.ConfirmedValidator('password', 'passwordConfirm')

    })
  }

  ngOnInit(): void {
    
    this.submitted = false;
    this.authService.getUsers().subscribe( {
      next : (users) => {
        this.users = users
         
      },
      error: (err) => {
        console.log("Server Error", err);
        
      },
      complete : () => {
        console.log("Done.");
        
      }
    })
    
  }

  public ConfirmedValidator(controlName: string, matchingControlName: string){

    return (formGroup: FormGroup) => {

        const control = formGroup.controls[controlName];

        const matchingControl = formGroup.controls[matchingControlName];

  

        if (control.value !== matchingControl.value) {

            matchingControl.setErrors({ confirmedValidator: true });

        } else {

            matchingControl.setErrors(null);

        }

    }

}

  ngAfterViewInit(){
    // initializing Selcet 
    M.FormSelect.init(document.querySelector('select'));  
}

  register(formDirective : FormGroupDirective) {
    this.submitted = true;
    if(this.registerationForm.valid) {
      this.authService.register(this.registerationForm.value).subscribe( {
        next : data => {
          this.success = "Successfully Registered!";
          this.submitted = false;
          this.registerationForm.reset();
          formDirective.resetForm();
  
        },
        error : err => {
         this.errorMessage = "Sorry failed."
        }
      }
      )

    }
    
  }

}
